apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "go-http-server.fullname" . }}
  labels:
    app: io.safesurfer.go-http-server
    {{- include "go-http-server.labels" . | nindent 4 }}
{{- if .Values.labels }}
{{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- end }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      app: io.safesurfer.go-http-server
      {{- include "go-http-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        app: io.safesurfer.go-http-server
        {{- include "go-http-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "go-http-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.headerMap }}
            - name: APP_HEADER_SET_ENABLE
              value: "true"
            - name: APP_HEADER_MAP_PATH
              value: {{ .Values.headerMapPath }}
          {{- end }}
          {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- if .Values.templateMap }}
          - name: templatemap
            mountPath: {{ .Values.templateMapPath }}
          {{- end }}
          {{- if .Values.headerMap }}
          - name: headermap
            mountPath: {{ .Values.headerMapPath }}
            subPath: "headers.yaml"
          {{- end }}
          {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | trim | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.templateMap }}
        - name: templatemap
          configMap:
            name: {{ include "go-http-server.fullname" . }}-templatemap
      {{- end }}
      {{- if .Values.headerMap }}
        - name: headermap
          configMap:
            name: {{ include "go-http-server.fullname" . }}-headermap
      {{- end }}
      {{- if .Values.extraVolumes }}
        {{ toYaml .Values.extraVolumes | trim | nindent 8 }}
      {{ end }}
