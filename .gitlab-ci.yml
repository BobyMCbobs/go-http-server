stages:
  - test
  - lint
  - build
  - pages

include:
  template: Dependency-Scanning.gitlab-ci.yml

variables:
  REGISTRIES: "$CI_REGISTRY"
  ARCH_DEFAULT: "amd64"
  ARCHES: amd64 arm64
  APP_BUILD_VERSION: 0.0.0
  APP_BUILD_MODE: development
  IMAGE_KO: ghcr.io/ko-build/ko:v0.13.0
  IMAGE_PYTHON: python:3.8-buster
  VERSION_COSIGN: v2.0.2
  COSIGN_YES: "true"

.image-set-build-env: &image-set-build-env |
  echo "Commit made on '${CI_COMMIT_TIMESTAMP}'"
  export APP_BUILD_HASH="$CI_COMMIT_SHORT_SHA"
  export APP_BUILD_DATE=$(date --date="${CI_COMMIT_TIMESTAMP//[T+]/ }" '+%Y.%m.%d.%H%M')
  export APP_BUILD_VERSION=0.0.0
  export APP_BUILD_MODE=development
  export IMAGE_DESTINATIONS="latest"
  if [[ ! -z "$CI_COMMIT_TAG" ]]; then
    export APP_BUILD_VERSION="$CI_COMMIT_TAG"
    export APP_BUILD_MODE=production
    export IMAGE_DESTINATIONS="$APP_BUILD_VERSION"
  fi

.setup-cosign: &setup-cosign |
  curl -L https://github.com/sigstore/cosign/releases/download/$VERSION_COSIGN/cosign-linux-amd64  -o /usr/local/bin/cosign
  chmod +x /usr/local/bin/cosign

build-container:
  stage: build
  image:
    name: $IMAGE_KO
    entrypoint: [""]
  retry: 2
  id_tokens:
    SIGSTORE_ID_TOKEN:
      aud: "sigstore"
  variables:
    KO_DOCKER_REPO: "$CI_REGISTRY_IMAGE"
  before_script:
    - set -x
    - export KO_DOCKER_REPO="$(echo ${KO_DOCKER_REPO} | tr '[:upper:]' '[:lower:]')"
    - ko login "${CI_REGISTRY}" -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}"
    - *setup-cosign
    - *image-set-build-env
  script:
    - |
      IMAGE="$(ko publish \
      --bare \
      --tags "${IMAGE_DESTINATIONS}" \
      .)"
    - cosign sign --recursive -y "$IMAGE"
    - cosign download sbom $IMAGE > /tmp/sbom-spdx.json
    - cosign attest -y --recursive --predicate /tmp/sbom-spdx.json $IMAGE

spell_check:
  stage: lint
  image:
    name: $IMAGE_KO
    entrypoint: [""]
  allow_failure: true
  before_script:
    - go install github.com/client9/misspell/cmd/misspell@latest
  script:
    - misspell -error main.go cmd pkg docs k8s-manifests README*

lint_backend:
  stage: lint
  image:
    name: $IMAGE_KO
    entrypoint: [""]
  allow_failure: true
  before_script:
    - go install golang.org/x/lint/golint@latest
  script:
    - golint -set_exit_status ./...

pages:
  image: $IMAGE_PYTHON
  stage: pages
  before_script:
    - pip install mkdocs-material
  script:
  - mkdocs build
  - mv site public
  artifacts:
    paths:
    - public
  only:
    - master
